{"slots":[{"roomId":"aud_room","notAllocated":false,"fromTimeMillis":1465459200000,"break":null,"roomSetup":"theatre","talk":{"trackId":"jse","talkType":"Conference","track":"Java Language","summaryAsHtml":"<p>The ObjectLayout package provides a set of data structure classes designed with optimised memory layout in mind. In languages like C and C++, the use of structs and explicit pointers can deliver high performance for data access through hardware optimisations for caching and pre-fetching. Java&#x27;s use of implicit pointers, mutable arrays and general inheritance forces the use of reference lookups whenever an object needs to be accessed.</p>\n<p>This session will look at the ObjectLayout package (www.objectlayout.org), which provides a new set of APIs that are aimed at matching the natural speed benefits similar data structure constructs enable in most C-style languages while maintaining an idiomatic Java feel and a natural fit with existing code and libraries.</p>\n<p>The session will talk through the need for these APIs then describe how they work in practice. We&#x27;ll also look at how the JVM can further optimise the implementation of the API by making this intrinsic.</p>\n","id":"MYD-3370","speakers":[{"link":{"href":"http://cfp.devoxx.co.uk/api/conferences/DevoxxUK2016/speakers/c2d8b8e1e33706d84d040f43d770cd72da5c6030","rel":"http://cfp.devoxx.co.uk/api/profile/speaker","title":"Simon Ritter"},"name":"Simon Ritter"}],"title":"Faster Java By Adding Structs (Sort Of)","lang":"en","summary":"The ObjectLayout package provides a set of data structure classes designed with optimised memory layout in mind. In languages like C and C++, the use of structs and explicit pointers can deliver high performance for data access through hardware optimisations for caching and pre-fetching. Java's use of implicit pointers, mutable arrays and general inheritance forces the use of reference lookups whenever an object needs to be accessed.\r\n\r\nThis session will look at the ObjectLayout package (www.objectlayout.org), which provides a new set of APIs that are aimed at matching the natural speed benefits similar data structure constructs enable in most C-style languages while maintaining an idiomatic Java feel and a natural fit with existing code and libraries.\r\n\r\nThe session will talk through the need for these APIs then describe how they work in practice. We'll also look at how the JVM can further optimise the implementation of the API by making this intrinsic."},"fromTime":"09:00","toTimeMillis":1465462200000,"toTime":"09:50","roomCapacity":550,"roomName":"Auditorium","slotId":"conf_aud_room_thursday_9_9h0_9h50","day":"thursday"},{"roomId":"room1","notAllocated":false,"fromTimeMillis":1465459200000,"break":null,"roomSetup":"theatre","talk":{"trackId":"cld","talkType":"Conference","track":"Cloud, Containers & Infrastructure","summaryAsHtml":"<p>Lagom is a new framework for Java designed with microservices in mind. It aims to simplify the process of building microservice-based systems that communicate asynchronously, self-heal, scale elastically and remain responsive under load and under failure.</p>\n<p>Many of the challenges of microservices are caused by the fact we use tools designed without them in mind. So, how can a framework made to build systems composed of microservices from the start offer us a better solution? Because Lagom is a tool that is highly opinionated and explicitly designed to make development and production with microservices easy, it brings back all the fun and productivity into programming while still enabling you to build a reactive, distributed, highly scalable and rock solid application.</p>\n<p>By the end of this presentation, you&#x27;ll have experienced first hand how creating systems of microservices on the JVM using Lagom is dead-simple, intuitive, frictionless and a lot of fun! And we’ll ask whether reactive microservices are potentially so much better than, for example, Java EE?</p>\n","id":"UZA-8885","speakers":[{"link":{"href":"http://cfp.devoxx.co.uk/api/conferences/DevoxxUK2016/speakers/409fc020de27c535482bb48840f6469839b39bad","rel":"http://cfp.devoxx.co.uk/api/profile/speaker","title":"Markus Eisele"},"name":"Markus Eisele"}],"title":"Taking the friction out of microservice frameworks with Lagom","lang":"en","summary":"Lagom is a new framework for Java designed with microservices in mind. It aims to simplify the process of building microservice-based systems that communicate asynchronously, self-heal, scale elastically and remain responsive under load and under failure.\r\n\r\nMany of the challenges of microservices are caused by the fact we use tools designed without them in mind. So, how can a framework made to build systems composed of microservices from the start offer us a better solution? Because Lagom is a tool that is highly opinionated and explicitly designed to make development and production with microservices easy, it brings back all the fun and productivity into programming while still enabling you to build a reactive, distributed, highly scalable and rock solid application. \r\n\r\nBy the end of this presentation, you'll have experienced first hand how creating systems of microservices on the JVM using Lagom is dead-simple, intuitive, frictionless and a lot of fun! And we’ll ask whether reactive microservices are potentially so much better than, for example, Java EE?"},"fromTime":"09:00","toTimeMillis":1465462200000,"toTime":"09:50","roomCapacity":220,"roomName":"Room A","slotId":"conf_room1_thursday_9_9h0_9h50","day":"thursday"},{"roomId":"room2","notAllocated":false,"fromTimeMillis":1465459200000,"break":null,"roomSetup":"classroom","talk":{"trackId":"bd","talkType":"Conference","track":"Big Data","summaryAsHtml":"<p>In 2004 Google published the MapReduce paper, a programming model that kick-started big data as we know it. Ten years later, Google introduced Dataflow - a new paradigm, integrating batch and stream processing in one common abstraction. This time the offer was more than a paper, but also an open source Java SDK and a cloud managed service to run it. In 2016 big data players like Cask, Cloudera, Data Artisans, PayPal, Slack, Talend joined Google to propose Dataflow for incubation at the Apache Software Foundation - Dataflow is here, not only unifying batch and streaming, but also the big data world.</p>\n<p>In this talk we are going to review Dataflow&#x27;s differentiating elements and why they matter.  We’ll demonstrate Dataflow’s capabilities through a real-time demo with practical insights on how to manage and visualize streams of data.</p>\n","id":"KUN-7800","speakers":[{"link":{"href":"http://cfp.devoxx.co.uk/api/conferences/DevoxxUK2016/speakers/3e84a043e87968d0b371144989d6bff750ebe920","rel":"http://cfp.devoxx.co.uk/api/profile/speaker","title":"Ray Tsang"},"name":"Ray Tsang"},{"link":{"href":"http://cfp.devoxx.co.uk/api/conferences/DevoxxUK2016/speakers/55718f7a7b317aa6799f2107b85293c9236e0fc3","rel":"http://cfp.devoxx.co.uk/api/profile/speaker","title":"Felipe Hoffa"},"name":"Felipe Hoffa"}],"title":"Google Dataflow: The new open model for batch and stream processing","lang":"en","summary":"In 2004 Google published the MapReduce paper, a programming model that kick-started big data as we know it. Ten years later, Google introduced Dataflow - a new paradigm, integrating batch and stream processing in one common abstraction. This time the offer was more than a paper, but also an open source Java SDK and a cloud managed service to run it. In 2016 big data players like Cask, Cloudera, Data Artisans, PayPal, Slack, Talend joined Google to propose Dataflow for incubation at the Apache Software Foundation - Dataflow is here, not only unifying batch and streaming, but also the big data world.\r\n\r\nIn this talk we are going to review Dataflow's differentiating elements and why they matter.  We’ll demonstrate Dataflow’s capabilities through a real-time demo with practical insights on how to manage and visualize streams of data."},"fromTime":"09:00","toTimeMillis":1465462200000,"toTime":"09:50","roomCapacity":32,"roomName":"Room B","slotId":"conf_room2_thursday_9_9h0_9h50","day":"thursday"},{"roomId":"room3","notAllocated":true,"fromTimeMillis":1465459200000,"break":null,"roomSetup":"classroom","talk":null,"fromTime":"09:00","toTimeMillis":1465462200000,"toTime":"09:50","roomCapacity":32,"roomName":"Room C","slotId":"conf_room3_thursday_9_9h0_9h50","day":"thursday"},{"roomId":"room4","notAllocated":false,"fromTimeMillis":1465459200000,"break":null,"roomSetup":"classroom","talk":{"trackId":"java","talkType":"Conference","track":"JVM languages","summaryAsHtml":"<p>What is functional programming? No assignment statements, no variables,\nonce given a value never change, no side-effects at all. “The functional programmer sounds rather like a mediæval monk, denying himself the pleasures of life in the hope that it will make him virtuous.”.</p>\n<p>But there must be something to it, as there are languages which allow only this kind of approach to software design. Can something useful can really be done in this paradigm?</p>\n<p>I will show you a language develop in the late 80s called Haskell. We will explore its syntax as well as philosophy behind its creation. Why would you want to learn Haskell? Some say it will make you a better developer, triggering ability to look at software problems with different approach. Is it true? You have to see it for yourself.</p>\n","id":"CXH-8927","speakers":[{"link":{"href":"http://cfp.devoxx.co.uk/api/conferences/DevoxxUK2016/speakers/fc9bd839dd657be9f338da76e6245226a867f529","rel":"http://cfp.devoxx.co.uk/api/profile/speaker","title":"Paul Szulc"},"name":"Paul Szulc"}],"title":"Fun never stops. Introduction to Haskell Programming language","lang":"en","summary":"What is functional programming? No assignment statements, no variables,\r\nonce given a value never change, no side-effects at all. “The functional programmer sounds rather like a mediæval monk, denying himself the pleasures of life in the hope that it will make him virtuous.”.\r\n\r\nBut there must be something to it, as there are languages which allow only this kind of approach to software design. Can something useful can really be done in this paradigm?\r\n\r\nI will show you a language develop in the late 80s called Haskell. We will explore its syntax as well as philosophy behind its creation. Why would you want to learn Haskell? Some say it will make you a better developer, triggering ability to look at software problems with different approach. Is it true? You have to see it for yourself."},"fromTime":"09:00","toTimeMillis":1465462200000,"toTime":"09:50","roomCapacity":32,"roomName":"Room D","slotId":"conf_room4_thursday_9_9h0_9h50","day":"thursday"},{"roomId":"aud_room","notAllocated":false,"fromTimeMillis":1465462800000,"break":null,"roomSetup":"theatre","talk":{"trackId":"archisec","talkType":"Conference","track":"Architecture & Security","summaryAsHtml":"<p>Security is now important to all of us, not just people who work at Facebook, but it is a complicated domain with a lot of concepts to understand.  In any technical ecosystem there is a blizzard of security technology as well as the generic concepts like keys, roles, certificates, trust, signing and so on.  Yet none of this is useful unless we know what problem we’re really trying to solve.</p>\n<p>In this talk we dive into the fundamentals of system security to introduce the topics we need to understand in order to decide how to secure our systems.  We’ll cover topics like risk assessment, threat modelling, policy definition and core security design principles before considering which specific technologies we should then apply to mitigate the security risks that we have identified.</p>\n","id":"HMR-0180","speakers":[{"link":{"href":"http://cfp.devoxx.co.uk/api/conferences/DevoxxUK2016/speakers/043c35faefeb34dd753484e0151b7749db27aa07","rel":"http://cfp.devoxx.co.uk/api/profile/speaker","title":"Eoin Woods"},"name":"Eoin Woods"}],"title":"Security Beyond the Libraries","lang":"en","summary":"Security is now important to all of us, not just people who work at Facebook, but it is a complicated domain with a lot of concepts to understand.  In any technical ecosystem there is a blizzard of security technology as well as the generic concepts like keys, roles, certificates, trust, signing and so on.  Yet none of this is useful unless we know what problem we’re really trying to solve.\r\n\r\nIn this talk we dive into the fundamentals of system security to introduce the topics we need to understand in order to decide how to secure our systems.  We’ll cover topics like risk assessment, threat modelling, policy definition and core security design principles before considering which specific technologies we should then apply to mitigate the security risks that we have identified."},"fromTime":"10:00","toTimeMillis":1465465800000,"toTime":"10:50","roomCapacity":550,"roomName":"Auditorium","slotId":"conf_aud_room_thursday_9_10h0_10h50","day":"thursday"},{"roomId":"room1","notAllocated":false,"fromTimeMillis":1465462800000,"break":null,"roomSetup":"theatre","talk":{"trackId":"bd","talkType":"Conference","track":"Big Data","summaryAsHtml":"<p>Can you imagine a database that stands as much traffic as you want, adding and removing nodes automatically, working interruption-free even if a volcano starts spitting lava over your data centres?</p>\n<p>That&#x27;s the promise of distributed systems like Cassandra, Voldemort or Riak. But, how do they do it?</p>\n<p>In this talk I will tell you the basics of distributed databases. Come to my talk if you want to learn about CAP, BASE, incremental scalability, replication or consensus. I will also explain geeky things like gossip, vector clocks, hinted handoff, or entropy.</p>\n<p>By the end of the session you should understand which is the architecture that allows Amazon to have their shopping cart available 24 hours a day, 365.25 days a year, or Linkedin to be able to spam you non-stop.</p>\n<p>When was the last time you saw Amazon or Linkedin websites down?</p>\n","id":"FPX-6147","speakers":[{"link":{"href":"http://cfp.devoxx.co.uk/api/conferences/DevoxxUK2016/speakers/21c62c562053e53fee66f6fe5e58485177b266fa","rel":"http://cfp.devoxx.co.uk/api/profile/speaker","title":"Javier Ramirez"},"name":"Javier Ramirez"}],"title":"Everything you always wanted to know about highly available distributed databases","lang":"en","summary":"Can you imagine a database that stands as much traffic as you want, adding and removing nodes automatically, working interruption-free even if a volcano starts spitting lava over your data centres?\r\n\r\nThat's the promise of distributed systems like Cassandra, Voldemort or Riak. But, how do they do it?\r\n\r\nIn this talk I will tell you the basics of distributed databases. Come to my talk if you want to learn about CAP, BASE, incremental scalability, replication or consensus. I will also explain geeky things like gossip, vector clocks, hinted handoff, or entropy.\r\n\r\nBy the end of the session you should understand which is the architecture that allows Amazon to have their shopping cart available 24 hours a day, 365.25 days a year, or Linkedin to be able to spam you non-stop.\r\n\r\nWhen was the last time you saw Amazon or Linkedin websites down?"},"fromTime":"10:00","toTimeMillis":1465465800000,"toTime":"10:50","roomCapacity":220,"roomName":"Room A","slotId":"conf_room1_thursday_9_10h0_10h50","day":"thursday"},{"roomId":"room2","notAllocated":true,"fromTimeMillis":1465462800000,"break":null,"roomSetup":"classroom","talk":null,"fromTime":"10:00","toTimeMillis":1465465800000,"toTime":"10:50","roomCapacity":32,"roomName":"Room B","slotId":"conf_room2_thursday_9_10h0_10h50","day":"thursday"},{"roomId":"room3","notAllocated":false,"fromTimeMillis":1465462800000,"break":null,"roomSetup":"classroom","talk":{"trackId":"m","talkType":"Conference","track":"Mobile, IoT & Embedded","summaryAsHtml":"<p>NativeScript is a free and open source JavaScript framework for building native iOS, Android, and Windows Phone apps, which you can use with JavaScript and Angular 2.0. But I know what you’re thinking: another way of building apps? What makes NativeScript special? Here are a few cool things:\n- Direct access to native APIs—no plugins required. Want to create a file on Android? Run new java.io.File()—in JavaScript!\n- Completely native performance through the use of a JavaScript bridge natively available on all three mobile platforms.\n- Cross-platform libraries for common use cases. Need to call a JSON API? Run http.getJSON\n- Style native apps using CSS. Yep, that’s actually a thing.</p>\n<p>Curious about how it all works? Come learn! Architectures will be explained; apps will be built; and fun will be had by all.</p>\n","id":"CTA-3209","speakers":[{"link":{"href":"http://cfp.devoxx.co.uk/api/conferences/DevoxxUK2016/speakers/956c831a07838167f34683980017ce719f40a103","rel":"http://cfp.devoxx.co.uk/api/profile/speaker","title":"Sebastian Witalec"},"name":"Sebastian Witalec"}],"title":"Introduction to NativeScript","lang":"en","summary":"NativeScript is a free and open source JavaScript framework for building native iOS, Android, and Windows Phone apps, which you can use with JavaScript and Angular 2.0. But I know what you’re thinking: another way of building apps? What makes NativeScript special? Here are a few cool things:\r\n- Direct access to native APIs—no plugins required. Want to create a file on Android? Run new java.io.File()—in JavaScript!\r\n- Completely native performance through the use of a JavaScript bridge natively available on all three mobile platforms.\r\n- Cross-platform libraries for common use cases. Need to call a JSON API? Run http.getJSON\r\n- Style native apps using CSS. Yep, that’s actually a thing.\r\n\r\nCurious about how it all works? Come learn! Architectures will be explained; apps will be built; and fun will be had by all."},"fromTime":"10:00","toTimeMillis":1465465800000,"toTime":"10:50","roomCapacity":32,"roomName":"Room C","slotId":"conf_room3_thursday_9_10h0_10h50","day":"thursday"},{"roomId":"room4","notAllocated":false,"fromTimeMillis":1465462800000,"break":null,"roomSetup":"classroom","talk":{"trackId":"ssj","talkType":"Conference","track":"Server Side Java","summaryAsHtml":"<p>Are Websphere or Weblogic appropriate for your project? Too big&quot; ? Do Jetty or Tomcat actually meet your needs? Too &quot;small&quot;?</p>\n<p>Neither too big nor too small. What you need is &quot;just enough app server&quot; to support only the subset of APIs and services your application needs.</p>\n<p>In this session I will make an inventory of Java EE application servers (Weblogic, Websphere, JBoss, GlassFish), Profile Web (Tomee, Payara, Siwpass) and Servlets (Tomcat, Jetty, Undertow). If Microservices is want you want, I will introduce other modular solutions such as WildFly Swarm, KumuluzEE, Spring Boot or Dropwizard. I will talk about performance, war, executable jar, monitoring, management, optimization, use cases and some personal feedback... all this by showing code and executing several types of applications (from the simplest to more complex) in several kinds of containers ... and maybe even on a Raspberry Pi.</p>\n","id":"EQU-3820","speakers":[{"link":{"href":"http://cfp.devoxx.co.uk/api/conferences/DevoxxUK2016/speakers/dc61d5c028dceb9ce4fd55623c6f725f3666ab46","rel":"http://cfp.devoxx.co.uk/api/profile/speaker","title":"Antonio Goncalves"},"name":"Antonio Goncalves"}],"title":"Just enough app server","lang":"en","summary":"Are Websphere or Weblogic appropriate for your project? Too big\" ? Do Jetty or Tomcat actually meet your needs? Too \"small\"?\r\n\r\nNeither too big nor too small. What you need is \"just enough app server\" to support only the subset of APIs and services your application needs.\r\n\r\nIn this session I will make an inventory of Java EE application servers (Weblogic, Websphere, JBoss, GlassFish), Profile Web (Tomee, Payara, Siwpass) and Servlets (Tomcat, Jetty, Undertow). If Microservices is want you want, I will introduce other modular solutions such as WildFly Swarm, KumuluzEE, Spring Boot or Dropwizard. I will talk about performance, war, executable jar, monitoring, management, optimization, use cases and some personal feedback... all this by showing code and executing several types of applications (from the simplest to more complex) in several kinds of containers ... and maybe even on a Raspberry Pi."},"fromTime":"10:00","toTimeMillis":1465465800000,"toTime":"10:50","roomCapacity":32,"roomName":"Room D","slotId":"conf_room4_thursday_9_10h0_10h50","day":"thursday"},{"roomId":"a_hall","notAllocated":false,"fromTimeMillis":1465465800000,"break":{"id":"coffee","nameEN":"Coffee Break","nameFR":"Pause café","room":{"id":"a_hall","name":"","capacity":1500,"setup":"special"}},"roomSetup":"special","talk":null,"fromTime":"10:50","toTimeMillis":1465467000000,"toTime":"11:10","roomCapacity":1500,"roomName":"","slotId":"coffee_thursday_9_10h50_10h10","day":"thursday"},{"roomId":"aud_room","notAllocated":false,"fromTimeMillis":1465467000000,"break":null,"roomSetup":"theatre","talk":{"trackId":"agTest","talkType":"Conference","track":"Methodology & Culture","summaryAsHtml":"<p>Two years ago at Devoxx UK we talked about DevOps, what it was, why it was important and how to get started. Boy, was it scary. Now we’re wiser. More battle-scarred. The large scale of the challenge for application writers exploiting cloud and DevOps is clearer, but so is the path forward. Understanding the DevOps approach is important, but equally you must understand specific deployment technologies, security issues, operational reliability, and how to drive organisational transformation. Whether creating simple applications or sophisticated microservice architectures many of the challenges are the same. Join us to learn how you can apply this within your team and company.</p>\n","id":"HBI-7783","speakers":[{"link":{"href":"http://cfp.devoxx.co.uk/api/conferences/DevoxxUK2016/speakers/9306cdf428290c271555f664d29bca3a20140898","rel":"http://cfp.devoxx.co.uk/api/profile/speaker","title":"Daniel Bryant"},"name":"Daniel Bryant"},{"link":{"href":"http://cfp.devoxx.co.uk/api/conferences/DevoxxUK2016/speakers/5baf477a1c6f8b4f096fae4b01adf85bdfd9380c","rel":"http://cfp.devoxx.co.uk/api/profile/speaker","title":"Steve Poole"},"name":"Steve Poole"}],"title":"DevOps - Microservices, containers, platforms, tooling... Oh yeah, and people","lang":"en","summary":"Two years ago at Devoxx UK we talked about DevOps, what it was, why it was important and how to get started. Boy, was it scary. Now we’re wiser. More battle-scarred. The large scale of the challenge for application writers exploiting cloud and DevOps is clearer, but so is the path forward. Understanding the DevOps approach is important, but equally you must understand specific deployment technologies, security issues, operational reliability, and how to drive organisational transformation. Whether creating simple applications or sophisticated microservice architectures many of the challenges are the same. Join us to learn how you can apply this within your team and company."},"fromTime":"11:10","toTimeMillis":1465470000000,"toTime":"12:00","roomCapacity":550,"roomName":"Auditorium","slotId":"conf_aud_room_thursday_9_11h10_12h0","day":"thursday"},{"roomId":"room1","notAllocated":false,"fromTimeMillis":1465467000000,"break":null,"roomSetup":"theatre","talk":{"trackId":"archisec","talkType":"Conference","track":"Architecture & Security","summaryAsHtml":"<p>Eric Evan&#x27;s Domain Driven Design is a core text for all developers and it&#x27;s experiencing a renaissance due to the rise of Microservices.  But are most of us <em>really</em> applying DDD when we&#x27;re &quot;doing&quot; distributed systems development? We&#x27;re going to argue that we&#x27;re not. But we should be.  We need to recalibrate.</p>\n<p>We&#x27;ll begin by laying out what DDD means to us, based on experiences we&#x27;ve had building Microservices with distributed teams over the last 2 years. We&#x27;ll touch lightly on the well-understood elements such as &quot;ubiquitous language&quot;, &quot;intention revealing interfaces&quot; and &quot;hands on architects&quot;, before spending more time clarifying and explaining the much mis-applied concept of &quot;bounded contexts&quot;. Finally we&#x27;ll draw up in front of the largely ignored ones such as the many patterns for inter-team communication which derive from &quot;context maps&quot;.</p>\n<p>As we move away from the well-understood to the disregarded, we&#x27;ll illustrate why these latter ones are by far the most important to successful Microservice-based projects. We&#x27;ll explain why they matter, and the benefits you&#x27;ll see from applying them.</p>\n<p>You will leave ready to apply the full power of DDD, and you&#x27;ll have more fun as you do it.</p>\n","id":"JTS-9279","speakers":[{"link":{"href":"http://cfp.devoxx.co.uk/api/conferences/DevoxxUK2016/speakers/6bd0b13e7f4332a2e9b65839002aba7da4b6fc96","rel":"http://cfp.devoxx.co.uk/api/profile/speaker","title":"Andrew Harmel-Law"},"name":"Andrew Harmel-Law"},{"link":{"href":"http://cfp.devoxx.co.uk/api/conferences/DevoxxUK2016/speakers/fe956c1339ec2cd85d719a461350a68feaef202f","rel":"http://cfp.devoxx.co.uk/api/profile/speaker","title":"Gayathri  Thiyagarajan"},"name":"Gayathri  Thiyagarajan"}],"title":"Applying Domain Driven Design for Distributed Systems","lang":"en","summary":"Eric Evan's Domain Driven Design is a core text for all developers and it's experiencing a renaissance due to the rise of Microservices.  But are most of us *really* applying DDD when we're \"doing\" distributed systems development? We're going to argue that we're not. But we should be.  We need to recalibrate.\r\n\r\nWe'll begin by laying out what DDD means to us, based on experiences we've had building Microservices with distributed teams over the last 2 years. We'll touch lightly on the well-understood elements such as \"ubiquitous language\", \"intention revealing interfaces\" and \"hands on architects\", before spending more time clarifying and explaining the much mis-applied concept of \"bounded contexts\". Finally we'll draw up in front of the largely ignored ones such as the many patterns for inter-team communication which derive from \"context maps\".\r\n\r\nAs we move away from the well-understood to the disregarded, we'll illustrate why these latter ones are by far the most important to successful Microservice-based projects. We'll explain why they matter, and the benefits you'll see from applying them.\r\n\r\nYou will leave ready to apply the full power of DDD, and you'll have more fun as you do it."},"fromTime":"11:10","toTimeMillis":1465470000000,"toTime":"12:00","roomCapacity":220,"roomName":"Room A","slotId":"conf_room1_thursday_9_11h10_12h0","day":"thursday"},{"roomId":"room2","notAllocated":false,"fromTimeMillis":1465467000000,"break":null,"roomSetup":"classroom","talk":{"trackId":"future","talkType":"Conference","track":"Future<Devoxx>","summaryAsHtml":"<p>Leveraging the power of the cloud and microservices, this session demonstrates how music can be analyzed and composed in real-time to augment musical performance with a futuristic instrument. This session contains an introduction to relevant cloud technologies, and an introduction to music theory and composition. This session also has musical demonstrations and code snippets scattered throughout.  Enabling technologies demonstrated in this session include Java, HTML5, Spring Boot and Cloud Foundry.</p>\n","id":"KEZ-7310","speakers":[{"link":{"href":"http://cfp.devoxx.co.uk/api/conferences/DevoxxUK2016/speakers/d5654af4eabee673a0b8547db98b5843d440f3c5","rel":"http://cfp.devoxx.co.uk/api/profile/speaker","title":"James Weaver"},"name":"James Weaver"}],"title":"Composing Music in the Cloud","lang":"en","summary":"Leveraging the power of the cloud and microservices, this session demonstrates how music can be analyzed and composed in real-time to augment musical performance with a futuristic instrument. This session contains an introduction to relevant cloud technologies, and an introduction to music theory and composition. This session also has musical demonstrations and code snippets scattered throughout.  Enabling technologies demonstrated in this session include Java, HTML5, Spring Boot and Cloud Foundry."},"fromTime":"11:10","toTimeMillis":1465470000000,"toTime":"12:00","roomCapacity":32,"roomName":"Room B","slotId":"conf_room2_thursday_9_11h10_12h0","day":"thursday"},{"roomId":"room3","notAllocated":false,"fromTimeMillis":1465467000000,"break":null,"roomSetup":"classroom","talk":{"trackId":"cld","talkType":"Conference","track":"Cloud, Containers & Infrastructure","summaryAsHtml":"<p>Amazon Lambda is shaking-up Java server-side development. Now you can write services in the cloud without having to think about app servers or containers. This is revolutionary. This session will cover Amazon Lambda and some of the other services that will reduce the about of code and infrastructure you have to write and maintain. With Amazon Lambda you can write Java code and expose it as web services in the cloud or connect it to Amazon’s high availability JMS service. Amazon’s mantra is that everything in the cloud should be exposed as an API and we’ll see how Lambda ties into Amazon’s databases, VPCs, etc. I will also touch on how and where Java EE fits into this puzzle and whether you still need a container. This session provides an overview of the services available on AWS and best practices for Java developers.</p>\n","id":"SVF-6587","speakers":[{"link":{"href":"http://cfp.devoxx.co.uk/api/conferences/DevoxxUK2016/speakers/0a7a5008b03d41a9e2b6df0de3b473b47367a66d","rel":"http://cfp.devoxx.co.uk/api/profile/speaker","title":"Ryan Cuprak"},"name":"Ryan Cuprak"}],"title":"Containerless in the Cloud with AWS Lambda ","lang":"en","summary":"Amazon Lambda is shaking-up Java server-side development. Now you can write services in the cloud without having to think about app servers or containers. This is revolutionary. This session will cover Amazon Lambda and some of the other services that will reduce the about of code and infrastructure you have to write and maintain. With Amazon Lambda you can write Java code and expose it as web services in the cloud or connect it to Amazon’s high availability JMS service. Amazon’s mantra is that everything in the cloud should be exposed as an API and we’ll see how Lambda ties into Amazon’s databases, VPCs, etc. I will also touch on how and where Java EE fits into this puzzle and whether you still need a container. This session provides an overview of the services available on AWS and best practices for Java developers. "},"fromTime":"11:10","toTimeMillis":1465470000000,"toTime":"12:00","roomCapacity":32,"roomName":"Room C","slotId":"conf_room3_thursday_9_11h10_12h0","day":"thursday"},{"roomId":"room4","notAllocated":true,"fromTimeMillis":1465467000000,"break":null,"roomSetup":"classroom","talk":null,"fromTime":"11:10","toTimeMillis":1465470000000,"toTime":"12:00","roomCapacity":32,"roomName":"Room D","slotId":"conf_room4_thursday_9_11h10_12h0","day":"thursday"},{"roomId":"aud_room","notAllocated":false,"fromTimeMillis":1465470600000,"break":null,"roomSetup":"theatre","talk":{"trackId":"webHtml5","talkType":"Conference","track":"Modern Web","summaryAsHtml":"<p>In today’s world of agile business, developers and organizations benefit when JSON-based NoSQL databases and SQL-based querying come together. NoSQL provides schema flexibility, high performance, and elastic scaling. SQL provides expressive, independent data access.</p>\n<p>Developers need to deliver apps that readily evolve, perform, and scale, all to match changing business needs. Organizations need rapid access to their operational data, using standard analytical tools, for insight into their business.</p>\n<p>In this session, you will learn to build apps that combine NoSQL and SQL for agility, performance, and scalability. This includes:</p>\n<ul>\n<li>SQL for JSON</li>\n<li>JSON data modeling</li>\n<li>Indexing</li>\n<li>Tool integration</li>\n</ul>\n<p>You will understand how to effectively use NoSQL, using open-source technologies.</p>\n","id":"RSE-4199","speakers":[{"link":{"href":"http://cfp.devoxx.co.uk/api/conferences/DevoxxUK2016/speakers/69e5596a50112585d5acdb93e0a4da47a10a6a8d","rel":"http://cfp.devoxx.co.uk/api/profile/speaker","title":"Arun Gupta"},"name":"Arun Gupta"}],"title":"SQL for JSON: Querying with Performance for NoSQL Databases and Applications","lang":"en","summary":"In today’s world of agile business, developers and organizations benefit when JSON-based NoSQL databases and SQL-based querying come together. NoSQL provides schema flexibility, high performance, and elastic scaling. SQL provides expressive, independent data access.\r\n\r\nDevelopers need to deliver apps that readily evolve, perform, and scale, all to match changing business needs. Organizations need rapid access to their operational data, using standard analytical tools, for insight into their business.\r\n\r\nIn this session, you will learn to build apps that combine NoSQL and SQL for agility, performance, and scalability. This includes:\r\n\r\n- SQL for JSON\r\n- JSON data modeling\r\n- Indexing\r\n- Tool integration\r\n\r\nYou will understand how to effectively use NoSQL, using open-source technologies."},"fromTime":"12:10","toTimeMillis":1465473600000,"toTime":"13:00","roomCapacity":550,"roomName":"Auditorium","slotId":"conf_aud_room_thursday_9_12h10_13h0","day":"thursday"},{"roomId":"room1","notAllocated":false,"fromTimeMillis":1465470600000,"break":null,"roomSetup":"theatre","talk":{"trackId":"jse","talkType":"Conference","track":"Java Language","summaryAsHtml":"<p>With Java 9, modularity comes to your doorstep (whether you ordered it or not). This isn&#x27;t your average language feature: making the most out of it may involve rewiring your brain. In this session we explore the benefits of a modular codebase using Java 9 modules. Because who doesn’t like more reliable and secure applications, meanwhile killing the dreaded classpath?</p>\n<p>After reviewing the basic concepts of modules, we&#x27;ll explore modularity patterns that enhance your design and development skills. We all have existing software, so migration of codebases to a modular world is an important topic as well. Automatic modules, the &#x27;unnamed&#x27; module and other new concepts are added to your toolbox to this end.</p>\n<p>Want examples? We&#x27;ve got plenty in this practical and code-driven talk. Even if you intend to use Java 9 without modules, this talk helps you prevent common issues. You&#x27;ll be ready for Java 9 before you know it.</p>\n","id":"FQM-7414","speakers":[{"link":{"href":"http://cfp.devoxx.co.uk/api/conferences/DevoxxUK2016/speakers/5d086662f3cb6a6dac1e9831e25009b397a4c2d7","rel":"http://cfp.devoxx.co.uk/api/profile/speaker","title":"Sander Mak"},"name":"Sander Mak"},{"link":{"href":"http://cfp.devoxx.co.uk/api/conferences/DevoxxUK2016/speakers/d363a9b518e1184510dc05363aac5a8bcec23645","rel":"http://cfp.devoxx.co.uk/api/profile/speaker","title":"Paul Bakker"},"name":"Paul Bakker"}],"title":"Java 9 Modularity in Action","lang":"en","summary":"With Java 9, modularity comes to your doorstep (whether you ordered it or not). This isn't your average language feature: making the most out of it may involve rewiring your brain. In this session we explore the benefits of a modular codebase using Java 9 modules. Because who doesn’t like more reliable and secure applications, meanwhile killing the dreaded classpath?\r\n\r\nAfter reviewing the basic concepts of modules, we'll explore modularity patterns that enhance your design and development skills. We all have existing software, so migration of codebases to a modular world is an important topic as well. Automatic modules, the 'unnamed' module and other new concepts are added to your toolbox to this end.\r\n\r\nWant examples? We've got plenty in this practical and code-driven talk. Even if you intend to use Java 9 without modules, this talk helps you prevent common issues. You'll be ready for Java 9 before you know it. "},"fromTime":"12:10","toTimeMillis":1465473600000,"toTime":"13:00","roomCapacity":220,"roomName":"Room A","slotId":"conf_room1_thursday_9_12h10_13h0","day":"thursday"},{"roomId":"room2","notAllocated":true,"fromTimeMillis":1465470600000,"break":null,"roomSetup":"classroom","talk":null,"fromTime":"12:10","toTimeMillis":1465473600000,"toTime":"13:00","roomCapacity":32,"roomName":"Room B","slotId":"conf_room2_thursday_9_12h10_13h0","day":"thursday"},{"roomId":"room3","notAllocated":false,"fromTimeMillis":1465470600000,"break":null,"roomSetup":"classroom","talk":{"trackId":"ssj","talkType":"Conference","track":"Server Side Java","summaryAsHtml":"<p>Messaging systems underpin architectures ranging from stream processing, through to event sourcing and communication between loosely-coupled microservices. To most developers the technology is tangential to the business they work in, and is often disregarded with much hand waving as “just a pipe” for message distribution. Without a clear understanding of their capabilities and underlying design decisions, we imagine myths about how these systems “should” work and are frustrated in production by behaviours emerging from their design trade-offs.</p>\n<p>In this session you will learn how to think about messaging as we compare and contrast the approaches taken by two similar but fundamentally different messaging platforms – Apache ActiveMQ and Apache Kafka. We will discuss how their underlying philosophies impact message distribution, reliability, scalability, and performance.</p>\n<p>Along the way we will dip into how IOPS, latency and bandwidth affect throughput, why messaging systems do not play nicely with containers, and the unicorn of once-and-only-once delivery in distributed systems.</p>\n","id":"GFC-1442","speakers":[{"link":{"href":"http://cfp.devoxx.co.uk/api/conferences/DevoxxUK2016/speakers/8861f6cc7fddfcb469fc418a993867e3c106e50d","rel":"http://cfp.devoxx.co.uk/api/profile/speaker","title":"Jakub Korab"},"name":"Jakub Korab"}],"title":"The Myth of the Magical Messaging Fabric","lang":"en","summary":"Messaging systems underpin architectures ranging from stream processing, through to event sourcing and communication between loosely-coupled microservices. To most developers the technology is tangential to the business they work in, and is often disregarded with much hand waving as “just a pipe” for message distribution. Without a clear understanding of their capabilities and underlying design decisions, we imagine myths about how these systems “should” work and are frustrated in production by behaviours emerging from their design trade-offs.\r\n\r\nIn this session you will learn how to think about messaging as we compare and contrast the approaches taken by two similar but fundamentally different messaging platforms – Apache ActiveMQ and Apache Kafka. We will discuss how their underlying philosophies impact message distribution, reliability, scalability, and performance. \r\n\r\nAlong the way we will dip into how IOPS, latency and bandwidth affect throughput, why messaging systems do not play nicely with containers, and the unicorn of once-and-only-once delivery in distributed systems."},"fromTime":"12:10","toTimeMillis":1465473600000,"toTime":"13:00","roomCapacity":32,"roomName":"Room C","slotId":"conf_room3_thursday_9_12h10_13h0","day":"thursday"},{"roomId":"room4","notAllocated":false,"fromTimeMillis":1465470600000,"break":null,"roomSetup":"classroom","talk":{"trackId":"agTest","talkType":"Conference","track":"Methodology & Culture","summaryAsHtml":"<p>Many different roles contribute to building software: product owners, business specialists. testers. Yet knowledge of programming keeps these roles at a distance. In this talk, I will share how I have come to programming: not through wanting to program and taking courses on it, but through working with programmers in a style called mob programming. This talk serves as an inspiration for programmers to invite non-programmers to learning code a layer at a time, immersed in the experience of creating software together to transform the ability to deliver. Lessons specific to skillsets rub in both ways, leaving everyone better off after the experience.</p>\n<p>In this talk, you will learn:\nWhat is mob programming and why you should care about working in that style\nHow to use strong-style pairing as a means of connecting everyone regardless of their programming skill level\nWhat contributions non-programmers make in a mob before they learn to program\nHow I became a programmer through working in mobs at work and at community meetups over learning by studying programming</p>\n","id":"GXJ-0207","speakers":[{"link":{"href":"http://cfp.devoxx.co.uk/api/conferences/DevoxxUK2016/speakers/1409fce4681f29b479e1e7c3f8479feef0345a72","rel":"http://cfp.devoxx.co.uk/api/profile/speaker","title":"Maaret Pyhäjärvi"},"name":"Maaret Pyhäjärvi"}],"title":"Learning programming by osmosis","lang":"en","summary":"Many different roles contribute to building software: product owners, business specialists. testers. Yet knowledge of programming keeps these roles at a distance. In this talk, I will share how I have come to programming: not through wanting to program and taking courses on it, but through working with programmers in a style called mob programming. This talk serves as an inspiration for programmers to invite non-programmers to learning code a layer at a time, immersed in the experience of creating software together to transform the ability to deliver. Lessons specific to skillsets rub in both ways, leaving everyone better off after the experience. \r\n\r\nIn this talk, you will learn:\r\nWhat is mob programming and why you should care about working in that style\r\nHow to use strong-style pairing as a means of connecting everyone regardless of their programming skill level\r\nWhat contributions non-programmers make in a mob before they learn to program\r\nHow I became a programmer through working in mobs at work and at community meetups over learning by studying programming"},"fromTime":"12:10","toTimeMillis":1465473600000,"toTime":"13:00","roomCapacity":32,"roomName":"Room D","slotId":"conf_room4_thursday_9_12h10_13h0","day":"thursday"},{"roomId":"a_hall","notAllocated":false,"fromTimeMillis":1465473600000,"break":{"id":"lunch","nameEN":"Lunch","nameFR":"Pause déjeuner","room":{"id":"a_hall","name":"","capacity":1500,"setup":"special"}},"roomSetup":"special","talk":null,"fromTime":"13:00","toTimeMillis":1465477200000,"toTime":"14:00","roomCapacity":1500,"roomName":"","slotId":"lunch_thursday_9_13h0_13h0","day":"thursday"},{"roomId":"aud_room","notAllocated":true,"fromTimeMillis":1465474200000,"break":null,"roomSetup":"theatre","talk":null,"fromTime":"13:10","toTimeMillis":1465475100000,"toTime":"13:25","roomCapacity":550,"roomName":"Auditorium","slotId":"quick_aud_room_thursday_9_13h10_13h25","day":"thursday"},{"roomId":"room1","notAllocated":false,"fromTimeMillis":1465474200000,"break":null,"roomSetup":"theatre","talk":{"trackId":"webHtml5","talkType":"Quickie","track":"Modern Web","summaryAsHtml":"<p>Have fun writing books and tutorials using markdown and Gitbook, an Open Source app for generating a responsive website and ebook formats of your content.</p>\n<p>All your content is written in markdown and you can run the app locally to get an instant view of your content as soon as you save.  Gitbook uses CodeMirror, so your source code is very readable and Gitbook has many other tools to make your content easy to read.</p>\n<p>I&#x27;ll also show you how to publish onto Github pages, giving a fast, highly scalable site for your content.  You can also publish your books through Gitbook.io or self publish your content at numerous other sites.</p>\n","id":"JXH-6035","speakers":[{"link":{"href":"http://cfp.devoxx.co.uk/api/conferences/DevoxxUK2016/speakers/5e8ca892589dc7c4c4cf151bcb27e456eea6c1dc","rel":"http://cfp.devoxx.co.uk/api/profile/speaker","title":"John Stevenson"},"name":"John Stevenson"}],"title":"Book publishing for developers with Gitbook","lang":"en","summary":"Have fun writing books and tutorials using markdown and Gitbook, an Open Source app for generating a responsive website and ebook formats of your content.\r\n\r\nAll your content is written in markdown and you can run the app locally to get an instant view of your content as soon as you save.  Gitbook uses CodeMirror, so your source code is very readable and Gitbook has many other tools to make your content easy to read.\r\n\r\nI'll also show you how to publish onto Github pages, giving a fast, highly scalable site for your content.  You can also publish your books through Gitbook.io or self publish your content at numerous other sites.  "},"fromTime":"13:10","toTimeMillis":1465475100000,"toTime":"13:25","roomCapacity":220,"roomName":"Room A","slotId":"quick_room1_thursday_9_13h10_13h25","day":"thursday"},{"roomId":"room2","notAllocated":true,"fromTimeMillis":1465474200000,"break":null,"roomSetup":"classroom","talk":null,"fromTime":"13:10","toTimeMillis":1465475100000,"toTime":"13:25","roomCapacity":32,"roomName":"Room B","slotId":"quick_room2_thursday_9_13h10_13h25","day":"thursday"},{"roomId":"room3","notAllocated":false,"fromTimeMillis":1465474200000,"break":null,"roomSetup":"classroom","talk":{"trackId":"jse","talkType":"Quickie","track":"Java Language","summaryAsHtml":"<p>Most developers prefer to spend their time writing code instead of performing build script maintenance. Build scripting may be an essential part of the software development process, but it often lacks maintainability which makes applying and deploying changes a tedious job. So it’s important to make sure your build system encourages simplicity and that changes can be made in a fast and straightforward way. Industry standards Ant and Maven are not quite up to the task; Gradle is a better alternative.</p>\n<p>This presentation introduces Gradle – a modern build system that supports all JVM Languages – and shares the result of the Ant-to-Gradle migration that was performed at NS (Dutch Railways). The session will focus on the challenges we faced while trying to replace Ant scripting with the Gradle equivalent and how we handled them.</p>\n<p>After attending this session, you will have a good understanding of Gradle and its pros and cons compared to Ant and Maven. On top of that, you will be able to migrate your own project to Gradle, even if your project has a huge code base or relies on ancient technologies. The lessons we learnt at NS could be very helpful to your own situation.</p>\n","id":"ZMX-2796","speakers":[{"link":{"href":"http://cfp.devoxx.co.uk/api/conferences/DevoxxUK2016/speakers/0e03085bacc3ee8a149d76b6f0816a25ebcc234a","rel":"http://cfp.devoxx.co.uk/api/profile/speaker","title":"Hanno Embregts"},"name":"Hanno Embregts"}],"title":"Migrating 25K lines of Ant scripting to Gradle","lang":"en","summary":"Most developers prefer to spend their time writing code instead of performing build script maintenance. Build scripting may be an essential part of the software development process, but it often lacks maintainability which makes applying and deploying changes a tedious job. So it’s important to make sure your build system encourages simplicity and that changes can be made in a fast and straightforward way. Industry standards Ant and Maven are not quite up to the task; Gradle is a better alternative.\r\n\r\nThis presentation introduces Gradle – a modern build system that supports all JVM Languages – and shares the result of the Ant-to-Gradle migration that was performed at NS (Dutch Railways). The session will focus on the challenges we faced while trying to replace Ant scripting with the Gradle equivalent and how we handled them.\r\n\r\nAfter attending this session, you will have a good understanding of Gradle and its pros and cons compared to Ant and Maven. On top of that, you will be able to migrate your own project to Gradle, even if your project has a huge code base or relies on ancient technologies. The lessons we learnt at NS could be very helpful to your own situation."},"fromTime":"13:10","toTimeMillis":1465475100000,"toTime":"13:25","roomCapacity":32,"roomName":"Room C","slotId":"quick_room3_thursday_9_13h10_13h25","day":"thursday"},{"roomId":"room4","notAllocated":false,"fromTimeMillis":1465474200000,"break":null,"roomSetup":"classroom","talk":{"trackId":"agTest","talkType":"Quickie","track":"Methodology & Culture","summaryAsHtml":"<p>Have you ever gone into work and really, really not felt like doing anything? Or found that during an intense period, creativity in every other area of your life conveniently increases and procrastination becomes productive? It doesn&#x27;t have to be that way. Presenting Mood Driven Development: set yourself free. Work on whatever the frack you feel like.</p>\n","id":"LAW-0044","speakers":[{"link":{"href":"http://cfp.devoxx.co.uk/api/conferences/DevoxxUK2016/speakers/0d905960a23f5dcf4a9ff63ab81e1c9366927f32","rel":"http://cfp.devoxx.co.uk/api/profile/speaker","title":"Katharine Fitzpatrick"},"name":"Katharine Fitzpatrick"}],"title":"Mood Driven Development","lang":"en","summary":"Have you ever gone into work and really, really not felt like doing anything? Or found that during an intense period, creativity in every other area of your life conveniently increases and procrastination becomes productive? It doesn't have to be that way. Presenting Mood Driven Development: set yourself free. Work on whatever the frack you feel like."},"fromTime":"13:10","toTimeMillis":1465475100000,"toTime":"13:25","roomCapacity":32,"roomName":"Room D","slotId":"quick_room4_thursday_9_13h10_13h25","day":"thursday"},{"roomId":"aud_room","notAllocated":false,"fromTimeMillis":1465475400000,"break":null,"roomSetup":"theatre","talk":{"trackId":"cld","talkType":"Quickie","track":"Cloud, Containers & Infrastructure","summaryAsHtml":"<p>Ray lived in a 180-sqft (~18m2) micro-studio near New York.  It had no kitchen but it does come with free, but slow Wi-Fi.  Ray&#x27;s a Developer Advocate at Google and he travels a lot, often needs to build Docker images on the airplane, in coffee shops, or in hotels with unpredictable Wi-Fi. Learn how Ray adapted to working with large Docker images over slow Wi-Fi by utilizing Docker Machine, Google Cloud Platform, and a bunch of tips and tricks!</p>\n<p>This strategy also saved Ray from numerous demoes - he once demoed Docker containers and Kubernetes by tethering to his colleagues&#x27; phone connection.</p>\n","id":"AEP-7312","speakers":[{"link":{"href":"http://cfp.devoxx.co.uk/api/conferences/DevoxxUK2016/speakers/3e84a043e87968d0b371144989d6bff750ebe920","rel":"http://cfp.devoxx.co.uk/api/profile/speaker","title":"Ray Tsang"},"name":"Ray Tsang"}],"title":"My Slow Internet vs. Docker","lang":"en","summary":"Ray lived in a 180-sqft (~18m2) micro-studio near New York.  It had no kitchen but it does come with free, but slow Wi-Fi.  Ray's a Developer Advocate at Google and he travels a lot, often needs to build Docker images on the airplane, in coffee shops, or in hotels with unpredictable Wi-Fi. Learn how Ray adapted to working with large Docker images over slow Wi-Fi by utilizing Docker Machine, Google Cloud Platform, and a bunch of tips and tricks!\r\n\r\nThis strategy also saved Ray from numerous demoes - he once demoed Docker containers and Kubernetes by tethering to his colleagues' phone connection."},"fromTime":"13:30","toTimeMillis":1465476300000,"toTime":"13:45","roomCapacity":550,"roomName":"Auditorium","slotId":"quick_aud_room_thursday_9_13h30_13h45","day":"thursday"},{"roomId":"room1","notAllocated":false,"fromTimeMillis":1465475400000,"break":null,"roomSetup":"theatre","talk":{"trackId":"future","talkType":"Quickie","track":"Future<Devoxx>","summaryAsHtml":"<p>Diversity is important, on that most people agree. But in our not-quite-as-diverse-as-we&#x27;d-like-it world, it&#x27;s hard to get there. Sometimes it’s important to take small steps and hope for giant leaps to follow. For this year’s Devoxx UK we ran a few programs to increase diversity, and we&#x27;d like to share our findings with you on one of those, the Buddy Program.This initiative is all about providing people who don&#x27;t know anybody at the conference with introductions to other attendees, encouraging them to share their experience with their buddies, and have a more inclusive and enjoyable time to boot.</p>\n<p>As you can imagine, the content of this presentation will be hot off the press. We&#x27;re collecting the data right up until the presentation, so you&#x27;re truly getting the scoop here!</p>\n","id":"HCA-7374","speakers":[{"link":{"href":"http://cfp.devoxx.co.uk/api/conferences/DevoxxUK2016/speakers/e823d046d9a9ee1413441c995855a52bbc8953dc","rel":"http://cfp.devoxx.co.uk/api/profile/speaker","title":"Linda van der Pal"},"name":"Linda van der Pal"}],"title":"Improving Diversity in Tech - One Step at a Time","lang":"en","summary":"Diversity is important, on that most people agree. But in our not-quite-as-diverse-as-we'd-like-it world, it's hard to get there. Sometimes it’s important to take small steps and hope for giant leaps to follow. For this year’s Devoxx UK we ran a few programs to increase diversity, and we'd like to share our findings with you on one of those, the Buddy Program.This initiative is all about providing people who don't know anybody at the conference with introductions to other attendees, encouraging them to share their experience with their buddies, and have a more inclusive and enjoyable time to boot. \r\n\r\nAs you can imagine, the content of this presentation will be hot off the press. We're collecting the data right up until the presentation, so you're truly getting the scoop here!"},"fromTime":"13:30","toTimeMillis":1465476300000,"toTime":"13:45","roomCapacity":220,"roomName":"Room A","slotId":"quick_room1_thursday_9_13h30_13h45","day":"thursday"},{"roomId":"room2","notAllocated":false,"fromTimeMillis":1465475400000,"break":null,"roomSetup":"classroom","talk":{"trackId":"webHtml5","talkType":"Quickie","track":"Modern Web","summaryAsHtml":"<p>This is the story of the vote API that allows Devoxx attendees to rate talks at Devoxx UK and Devoxx BE. We will go through how the how the API is constructed as a microservice, deployment and how the UI is build. Along the way we will explore performance and how was first written in go as a way to explore the language and its journey to the JVM. Expect a rant about go, some lisp, Javascript and Java and lessons learned about running an API at a developer</p>\n","id":"ZQQ-2681","speakers":[{"link":{"href":"http://cfp.devoxx.co.uk/api/conferences/DevoxxUK2016/speakers/f5e2d81d6008a8570e0fbbcdab8495a96023dc15","rel":"http://cfp.devoxx.co.uk/api/profile/speaker","title":"Jonathan Mort"},"name":"Jonathan Mort"}],"title":"Going voting - Devoxx Vote API in 4 languages","lang":"en","summary":"This is the story of the vote API that allows Devoxx attendees to rate talks at Devoxx UK and Devoxx BE. We will go through how the how the API is constructed as a microservice, deployment and how the UI is build. Along the way we will explore performance and how was first written in go as a way to explore the language and its journey to the JVM. Expect a rant about go, some lisp, Javascript and Java and lessons learned about running an API at a developer "},"fromTime":"13:30","toTimeMillis":1465476300000,"toTime":"13:45","roomCapacity":32,"roomName":"Room B","slotId":"quick_room2_thursday_9_13h30_13h45","day":"thursday"},{"roomId":"room3","notAllocated":false,"fromTimeMillis":1465475400000,"break":null,"roomSetup":"classroom","talk":{"trackId":"agTest","talkType":"Quickie","track":"Methodology & Culture","summaryAsHtml":"<p>Why do we love to share knowledge, and what do we get into return? And, more importantly, how can we encourage others to join us? A delve into what inspires developers to help each other learn, with a sidestop into Japanese tea ceremony, internet cats, and 1,000 bacon-dipped Chuck Norris memes.</p>\n","id":"DYD-2907","speakers":[{"link":{"href":"http://cfp.devoxx.co.uk/api/conferences/DevoxxUK2016/speakers/682b3347474e7f2d61d62813eec9d985363a8f16","rel":"http://cfp.devoxx.co.uk/api/profile/speaker","title":"Lucy Carey"},"name":"Lucy Carey"}],"title":"Sharing code knowledge and cultural capital - when tech meets anthropology","lang":"en","summary":"Why do we love to share knowledge, and what do we get into return? And, more importantly, how can we encourage others to join us? A delve into what inspires developers to help each other learn, with a sidestop into Japanese tea ceremony, internet cats, and 1,000 bacon-dipped Chuck Norris memes. \r\n"},"fromTime":"13:30","toTimeMillis":1465476300000,"toTime":"13:45","roomCapacity":32,"roomName":"Room C","slotId":"quick_room3_thursday_9_13h30_13h45","day":"thursday"},{"roomId":"room4","notAllocated":true,"fromTimeMillis":1465475400000,"break":null,"roomSetup":"classroom","talk":null,"fromTime":"13:30","toTimeMillis":1465476300000,"toTime":"13:45","roomCapacity":32,"roomName":"Room D","slotId":"quick_room4_thursday_9_13h30_13h45","day":"thursday"},{"roomId":"aud_room","notAllocated":true,"fromTimeMillis":1465477200000,"break":null,"roomSetup":"theatre","talk":null,"fromTime":"14:00","toTimeMillis":1465480200000,"toTime":"14:50","roomCapacity":550,"roomName":"Auditorium","slotId":"conf_aud_room_thursday_9_14h0_14h50","day":"thursday"},{"roomId":"room1","notAllocated":false,"fromTimeMillis":1465477200000,"break":null,"roomSetup":"theatre","talk":{"trackId":"jse","talkType":"Conference","track":"Java Language","summaryAsHtml":"<p>While we’re drawing ever closer to Java 9, and even hearing about features in Java 10, it’s also true that many of us are still working with an older version. Even if your project has technically adopted Java 8, and even if you’re using it when coding new features, it’s likely the majority of your code base is still not making the most of what’s available in Java 8 - features like Lambda Expressions, the Streams API, and new Date/Time.</p>\n<p>In this presentation, Trisha will:</p>\n<ul>\n<li><p>Highlight some of the benefits of using Java 8 - after all, you’ll probably have to persuade The Management that tampering with existing code is worthwhile</p>\n</li>\n<li><p>Demonstrate how to identify areas of code that can be updated to use Java 8 features</p>\n</li>\n<li><p>Show how to automatically refactor your code to make use of features like lambdas and streams.</p>\n</li>\n<li><p>Cover some of the pros and cons of using the new features - including suggestions of when refactoring may NOT be the best idea.</p>\n</li>\n</ul>\n","id":"VDD-1641","speakers":[{"link":{"href":"http://cfp.devoxx.co.uk/api/conferences/DevoxxUK2016/speakers/154d6113c0291792412bd5eae51894fdf3ba823a","rel":"http://cfp.devoxx.co.uk/api/profile/speaker","title":"Trisha Gee"},"name":"Trisha Gee"}],"title":"Refactoring to Java 8 ","lang":"en","summary":"While we’re drawing ever closer to Java 9, and even hearing about features in Java 10, it’s also true that many of us are still working with an older version. Even if your project has technically adopted Java 8, and even if you’re using it when coding new features, it’s likely the majority of your code base is still not making the most of what’s available in Java 8 - features like Lambda Expressions, the Streams API, and new Date/Time.\r\n\r\nIn this presentation, Trisha will:\r\n\r\n- Highlight some of the benefits of using Java 8 - after all, you’ll probably have to persuade The Management that tampering with existing code is worthwhile\r\n\r\n- Demonstrate how to identify areas of code that can be updated to use Java 8 features\r\n\r\n- Show how to automatically refactor your code to make use of features like lambdas and streams.\r\n\r\n- Cover some of the pros and cons of using the new features - including suggestions of when refactoring may NOT be the best idea."},"fromTime":"14:00","toTimeMillis":1465480200000,"toTime":"14:50","roomCapacity":220,"roomName":"Room A","slotId":"conf_room1_thursday_9_14h0_14h50","day":"thursday"},{"roomId":"room2","notAllocated":false,"fromTimeMillis":1465477200000,"break":null,"roomSetup":"classroom","talk":{"trackId":"archisec","talkType":"Conference","track":"Architecture & Security","summaryAsHtml":"<p>An exploration of the architectural challenges within government and how the Ministry of Justice is introducing true digital transformation by tackling the underlying problems within the system.</p>\n<p>Over the last couple of years the UK Government has delivered the first wave of Digital Services but they have been hampered by integrations with legacy systems locked away inside walled gardens and immutable monoliths.</p>\n<p>Microservice architecture offers both a compelling alternative and an achievable plan to slay these lumbering giants by slicing them up into smaller systems which do one thing well, have proportionate security and are highly connected over less trusted networks.</p>\n<p>This talk will explore the far-reaching consequences of adopting microservice architecture in government, particularly focusing on real examples inside Criminal Justice.</p>\n","id":"OJA-9423","speakers":[{"link":{"href":"http://cfp.devoxx.co.uk/api/conferences/DevoxxUK2016/speakers/d91c2b7a2598e22a46059b01aee694bdeb07899b","rel":"http://cfp.devoxx.co.uk/api/profile/speaker","title":"Stephen Strudwick"},"name":"Stephen Strudwick"}],"title":"Monoliths to Microservices: Transforming the architecture of Criminal Justice","lang":"en","summary":"An exploration of the architectural challenges within government and how the Ministry of Justice is introducing true digital transformation by tackling the underlying problems within the system.\r\n\r\nOver the last couple of years the UK Government has delivered the first wave of Digital Services but they have been hampered by integrations with legacy systems locked away inside walled gardens and immutable monoliths.\r\n\r\nMicroservice architecture offers both a compelling alternative and an achievable plan to slay these lumbering giants by slicing them up into smaller systems which do one thing well, have proportionate security and are highly connected over less trusted networks.\r\n\r\nThis talk will explore the far-reaching consequences of adopting microservice architecture in government, particularly focusing on real examples inside Criminal Justice."},"fromTime":"14:00","toTimeMillis":1465480200000,"toTime":"14:50","roomCapacity":32,"roomName":"Room B","slotId":"conf_room2_thursday_9_14h0_14h50","day":"thursday"},{"roomId":"room3","notAllocated":false,"fromTimeMillis":1465477200000,"break":null,"roomSetup":"classroom","talk":{"trackId":"webHtml5","talkType":"Conference","track":"Modern Web","summaryAsHtml":"<p>JavaScript in the enterprise? Does that even make sense? After years of developing Java applications in the enterprise, many developers have become curious about what JavaScript can do for them. But how can you translate concepts like &#x27;modularity&#x27; and &#x27;loose coupling&#x27; to JavaScript applications?</p>\n<p>Do JavaScript applications have these kinds of concepts? AngularJS is a popular solution in the JavaScript world, though there are many other solutions, too. In this session, you will be introduced to RequireJS, responsive JavaScript, mobile development with JavaScript, as well as JavaScript transpilers such as GWT, Vaadin, and DukeScript.</p>\n<p>By the end of this session, you will have a thorough understanding of whether JavaScript is a sensible solution for you in developing enterprise JavaScript applications, today.</p>\n","id":"BPK-3719","speakers":[{"link":{"href":"http://cfp.devoxx.co.uk/api/conferences/DevoxxUK2016/speakers/1e5d7d1d4bdf9c631c1ecbc6106ea741d474c1b2","rel":"http://cfp.devoxx.co.uk/api/profile/speaker","title":"Geertjan Wielenga"},"name":"Geertjan Wielenga"}],"title":"10 Building Blocks for Enterprise JavaScript Applications","lang":"en","summary":"JavaScript in the enterprise? Does that even make sense? After years of developing Java applications in the enterprise, many developers have become curious about what JavaScript can do for them. But how can you translate concepts like 'modularity' and 'loose coupling' to JavaScript applications? \r\n\r\nDo JavaScript applications have these kinds of concepts? AngularJS is a popular solution in the JavaScript world, though there are many other solutions, too. In this session, you will be introduced to RequireJS, responsive JavaScript, mobile development with JavaScript, as well as JavaScript transpilers such as GWT, Vaadin, and DukeScript. \r\n\r\nBy the end of this session, you will have a thorough understanding of whether JavaScript is a sensible solution for you in developing enterprise JavaScript applications, today."},"fromTime":"14:00","toTimeMillis":1465480200000,"toTime":"14:50","roomCapacity":32,"roomName":"Room C","slotId":"conf_room3_thursday_9_14h0_14h50","day":"thursday"},{"roomId":"room4","notAllocated":true,"fromTimeMillis":1465477200000,"break":null,"roomSetup":"classroom","talk":null,"fromTime":"14:00","toTimeMillis":1465480200000,"toTime":"14:50","roomCapacity":32,"roomName":"Room D","slotId":"conf_room4_thursday_9_14h0_14h50","day":"thursday"},{"roomId":"aud_room","notAllocated":false,"fromTimeMillis":1465480800000,"break":null,"roomSetup":"theatre","talk":{"trackId":"cld","talkType":"Conference","track":"Cloud, Containers & Infrastructure","summaryAsHtml":"<p>Containers are the latest hype. It goes without saying that Docker for the development environment is a good thing but what about running our production Java applications inside a container?</p>\n<p>One of the well known benefits of containers is that they provide a self-contained way to package and ship applications. However, it is already common practice to build fat executable jars that require only a JRE so what advantages would containers actually offer a pure Java shop? At Sky our motivation is  efficient utilisation of hardware. We used to run single purpose VMs, which makes sense for  production but for our countless test environments it is prohibitively expensive. Even IaaS is still too slow to provision new environments and bootstrap new applications. This talk will be focusing on the downsides and lessons learned from running JVMs inside containers.</p>\n<p>We will cover the following topics:</p>\n<ul>\n<li>The benefits, downsides and complexities of running a Java application inside a container.</li>\n<li>Tuning memory limits taking into account Heap, Native memory, Metaspace, Stacks to avoid being OOM killed</li>\n<li>Tracking native memory with jcmd</li>\n<li>Operating system tools that are/are not container aw</li>\n</ul>\n","id":"SHM-5532","speakers":[{"link":{"href":"http://cfp.devoxx.co.uk/api/conferences/DevoxxUK2016/speakers/5302397660078b20829f417992650c9eff570667","rel":"http://cfp.devoxx.co.uk/api/profile/speaker","title":"Christopher Batey"},"name":"Christopher Batey"}],"title":"The JVM and Docker, a good idea?","lang":"en","summary":"Containers are the latest hype. It goes without saying that Docker for the development environment is a good thing but what about running our production Java applications inside a container?\r\n\r\nOne of the well known benefits of containers is that they provide a self-contained way to package and ship applications. However, it is already common practice to build fat executable jars that require only a JRE so what advantages would containers actually offer a pure Java shop? At Sky our motivation is  efficient utilisation of hardware. We used to run single purpose VMs, which makes sense for  production but for our countless test environments it is prohibitively expensive. Even IaaS is still too slow to provision new environments and bootstrap new applications. This talk will be focusing on the downsides and lessons learned from running JVMs inside containers.\r\n\r\nWe will cover the following topics:\r\n\r\n* The benefits, downsides and complexities of running a Java application inside a container.\r\n* Tuning memory limits taking into account Heap, Native memory, Metaspace, Stacks to avoid being OOM killed\r\n* Tracking native memory with jcmd\r\n* Operating system tools that are/are not container aw"},"fromTime":"15:00","toTimeMillis":1465483800000,"toTime":"15:50","roomCapacity":550,"roomName":"Auditorium","slotId":"conf_aud_room_thursday_9_15h0_15h50","day":"thursday"},{"roomId":"room1","notAllocated":false,"fromTimeMillis":1465480800000,"break":null,"roomSetup":"theatre","talk":{"trackId":"m","talkType":"Conference","track":"Mobile, IoT & Embedded","summaryAsHtml":"<p>Today, the idea behind &quot;Write Once, Run Anywhere&quot; applies to Mobile. Developers can write Java applications, and deploy them to the AppStore and the PlayStore. This has been made possible because of\n* JavaFX, which provides the cross-platform toolkit for creating user interfaces. JavaFX is part of JDK 8 and is widely available\n* JVM implementations on mobile devices.</p>\n<p>In this session, we show how to use your favourite IDE to write a Java Client application, and how to use that same IDE to create native applications that can be uploaded to the different appstores. These native applications use exactly the same code as a Java desktop application.</p>\n<p>We talk about the status of JavaFX on Mobile, and about the options for running Java code on mobile devices (e.g. Dalvik/ART, RoboVM AOT, OpenJDK with the Mobile OpenJDK project).</p>\n","id":"GUS-8094","speakers":[{"link":{"href":"http://cfp.devoxx.co.uk/api/conferences/DevoxxUK2016/speakers/29db73c44aa90f13dbf8129804f1037b44d9f3fe","rel":"http://cfp.devoxx.co.uk/api/profile/speaker","title":"Johan Vos"},"name":"Johan Vos"}],"title":"Java on Mobile is a thing... and it's really good!","lang":"en","summary":"Today, the idea behind \"Write Once, Run Anywhere\" applies to Mobile. Developers can write Java applications, and deploy them to the AppStore and the PlayStore. This has been made possible because of\r\n* JavaFX, which provides the cross-platform toolkit for creating user interfaces. JavaFX is part of JDK 8 and is widely available\r\n* JVM implementations on mobile devices.\r\n\r\nIn this session, we show how to use your favourite IDE to write a Java Client application, and how to use that same IDE to create native applications that can be uploaded to the different appstores. These native applications use exactly the same code as a Java desktop application.\r\n\r\nWe talk about the status of JavaFX on Mobile, and about the options for running Java code on mobile devices (e.g. Dalvik/ART, RoboVM AOT, OpenJDK with the Mobile OpenJDK project)."},"fromTime":"15:00","toTimeMillis":1465483800000,"toTime":"15:50","roomCapacity":220,"roomName":"Room A","slotId":"conf_room1_thursday_9_15h0_15h50","day":"thursday"},{"roomId":"room2","notAllocated":false,"fromTimeMillis":1465480800000,"break":null,"roomSetup":"classroom","talk":{"trackId":"ssj","talkType":"Conference","track":"Server Side Java","summaryAsHtml":"<p>Model-view-controller, or MVC for short, is a common pattern in web frameworks. MVC frameworks can be categorized as action-based or component-based. In a component-based framework, the HTTP requests are grouped and typically handled by framework components with little or no interaction with application code. In an action-based framework, on the other hand, the HTTP requests are routed to controllers and turned into actions by application code.<br  /></p>\n<p>The Java EE platform does not currently have support for action based MVC, but this is about to change. MVC 1.0, as specified by JSR 371, is targeted for the upcoming Java EE 8 release.</p>\n<p>This session provides an introduction to the action-based MVC 1.0 API and will include lots of code samples and tips to where to get started using this awesome technology.</p>\n<p>The objectives of this session are:\n1. Introduce MVC 1.0\n2. Explain consequences of major technical decisions\n3. Demo the new features</p>\n","id":"DFA-5025","speakers":[{"link":{"href":"http://cfp.devoxx.co.uk/api/conferences/DevoxxUK2016/speakers/12adfc33f8be23ee15a40f5a884df59da571bd1f","rel":"http://cfp.devoxx.co.uk/api/profile/speaker","title":"Ivar Grimstad"},"name":"Ivar Grimstad"}],"title":"MVC 1.0 - by Example","lang":"en","summary":"Model-view-controller, or MVC for short, is a common pattern in web frameworks. MVC frameworks can be categorized as action-based or component-based. In a component-based framework, the HTTP requests are grouped and typically handled by framework components with little or no interaction with application code. In an action-based framework, on the other hand, the HTTP requests are routed to controllers and turned into actions by application code.  \r\n\r\nThe Java EE platform does not currently have support for action based MVC, but this is about to change. MVC 1.0, as specified by JSR 371, is targeted for the upcoming Java EE 8 release.\r\n\r\nThis session provides an introduction to the action-based MVC 1.0 API and will include lots of code samples and tips to where to get started using this awesome technology.\r\n\r\nThe objectives of this session are:\r\n1. Introduce MVC 1.0\r\n2. Explain consequences of major technical decisions\r\n3. Demo the new features"},"fromTime":"15:00","toTimeMillis":1465483800000,"toTime":"15:50","roomCapacity":32,"roomName":"Room B","slotId":"conf_room2_thursday_9_15h0_15h50","day":"thursday"},{"roomId":"room3","notAllocated":true,"fromTimeMillis":1465480800000,"break":null,"roomSetup":"classroom","talk":null,"fromTime":"15:00","toTimeMillis":1465483800000,"toTime":"15:50","roomCapacity":32,"roomName":"Room C","slotId":"conf_room3_thursday_9_15h0_15h50","day":"thursday"},{"roomId":"room4","notAllocated":false,"fromTimeMillis":1465480800000,"break":null,"roomSetup":"classroom","talk":{"trackId":"future","talkType":"Conference","track":"Future<Devoxx>","summaryAsHtml":"<p>The more we interact with “smart apps,” the more we hear the word “cognitive” being thrown around. But what actually does this imply? What is a cognitive application? Can I make my app smarter? Can I make my app cognitive? In this session we&#x27;ll be covering what these buzzwords mean and how to enhance your application with Watson services. We&#x27;ll build an application from scratch and we&#x27;ll discuss how to integrate Watson into your existing application.</p>\n<p>You will see a demo of https://github.com/IBM-Bluemix/election-insights which uses Alchemy for sentiment analysis and entity extraction along with visual recognition. That app is hosted here: http://electioninsights.mybluemix.net/#/.</p>\n<p>From there I will use Node-Red to quickly build an app that uses Watson Tone Analysis and translates tone into color. That demo can be wired up to different inputs. By the end of the demo I&#x27;ll have the people in the audience interacting with it and the colors of the page updated in real time.</p>\n","id":"ITO-9640","speakers":[{"link":{"href":"http://cfp.devoxx.co.uk/api/conferences/DevoxxUK2016/speakers/d8289a1c857b591e53b2ea632d2e65e2d01452eb","rel":"http://cfp.devoxx.co.uk/api/profile/speaker","title":"Jonathan Kaufman"},"name":"Jonathan Kaufman"}],"title":"Building Cognitive Applications with Watson","lang":"en","summary":"The more we interact with “smart apps,” the more we hear the word “cognitive” being thrown around. But what actually does this imply? What is a cognitive application? Can I make my app smarter? Can I make my app cognitive? In this session we'll be covering what these buzzwords mean and how to enhance your application with Watson services. We'll build an application from scratch and we'll discuss how to integrate Watson into your existing application.\r\n \r\nYou will see a demo of https://github.com/IBM-Bluemix/election-insights which uses Alchemy for sentiment analysis and entity extraction along with visual recognition. That app is hosted here: http://electioninsights.mybluemix.net/#/.\r\n \r\nFrom there I will use Node-Red to quickly build an app that uses Watson Tone Analysis and translates tone into color. That demo can be wired up to different inputs. By the end of the demo I'll have the people in the audience interacting with it and the colors of the page updated in real time."},"fromTime":"15:00","toTimeMillis":1465483800000,"toTime":"15:50","roomCapacity":32,"roomName":"Room D","slotId":"conf_room4_thursday_9_15h0_15h50","day":"thursday"},{"roomId":"a_hall","notAllocated":false,"fromTimeMillis":1465483800000,"break":{"id":"coffee","nameEN":"Coffee Break","nameFR":"Pause café","room":{"id":"a_hall","name":"","capacity":1500,"setup":"special"}},"roomSetup":"special","talk":null,"fromTime":"15:50","toTimeMillis":1465485600000,"toTime":"16:20","roomCapacity":1500,"roomName":"","slotId":"coffee_thursday_9_15h50_15h20","day":"thursday"},{"roomId":"aud_room","notAllocated":false,"fromTimeMillis":1465485600000,"break":null,"roomSetup":"theatre","talk":{"trackId":"archisec","talkType":"Conference","track":"Architecture & Security","summaryAsHtml":"<p>If you want evidence that the software development industry is susceptible to fashion, just go and take a look at all of the hype around microservices. It&#x27;s everywhere! For some people microservices is &quot;the next big thing&quot;, whereas for others it&#x27;s simply a lightweight evolution of the big service-oriented architectures that we saw 10 years ago &quot;done right&quot;. Microservices is by no means a silver bullet though, and the design thinking required to create a good microservices architecture is the same as that needed to create a well structured monolith. And this begs the question that if you can’t build a well-structured monolith, what makes you think microservices is the answer?</p>\n","id":"ZGV-2861","speakers":[{"link":{"href":"http://cfp.devoxx.co.uk/api/conferences/DevoxxUK2016/speakers/f073452daae5e5dedc5ea67d322c8c31c8df9138","rel":"http://cfp.devoxx.co.uk/api/profile/speaker","title":"Simon Brown"},"name":"Simon Brown"}],"title":"Modular monoliths","lang":"en","summary":"If you want evidence that the software development industry is susceptible to fashion, just go and take a look at all of the hype around microservices. It's everywhere! For some people microservices is \"the next big thing\", whereas for others it's simply a lightweight evolution of the big service-oriented architectures that we saw 10 years ago \"done right\". Microservices is by no means a silver bullet though, and the design thinking required to create a good microservices architecture is the same as that needed to create a well structured monolith. And this begs the question that if you can’t build a well-structured monolith, what makes you think microservices is the answer?"},"fromTime":"16:20","toTimeMillis":1465488600000,"toTime":"17:10","roomCapacity":550,"roomName":"Auditorium","slotId":"conf_aud_room_thursday_9_16h20_17h10","day":"thursday"},{"roomId":"room1","notAllocated":false,"fromTimeMillis":1465485600000,"break":null,"roomSetup":"theatre","talk":{"trackId":"agTest","talkType":"Conference","track":"Methodology & Culture","summaryAsHtml":"<p>Working in a fast-growing company that doubles in size every year, maintaining the quality of products and engineers is a very challenging task.</p>\n<p>In this talk I will describe how Wix corporate structure evolved from functional teams to gangs, cross-functional teams responsible for end-to-end delivery; guilds, professional groups responsible for methodology, best practices, and training; and mini-companies that serve as internal startups to support rapid growth while maintaining velocity. I will also discuss how we poured our culture into a game-like “guild day”, that helps us maintain alignment, keep the high quality of our work and people, share knowledge, recruit and preserve the best developers, and support a quality-based culture of innovation.</p>\n","id":"PFB-1085","speakers":[{"link":{"href":"http://cfp.devoxx.co.uk/api/conferences/DevoxxUK2016/speakers/b9705cbdaa754755257c1e934fc5abb9b4c03d14","rel":"http://cfp.devoxx.co.uk/api/profile/speaker","title":"Aviran Mordo"},"name":"Aviran Mordo"}],"title":"Scaling Engineering by Hacking Conway's Law ","lang":"en","summary":"Working in a fast-growing company that doubles in size every year, maintaining the quality of products and engineers is a very challenging task.\r\n\r\nIn this talk I will describe how Wix corporate structure evolved from functional teams to gangs, cross-functional teams responsible for end-to-end delivery; guilds, professional groups responsible for methodology, best practices, and training; and mini-companies that serve as internal startups to support rapid growth while maintaining velocity. I will also discuss how we poured our culture into a game-like “guild day”, that helps us maintain alignment, keep the high quality of our work and people, share knowledge, recruit and preserve the best developers, and support a quality-based culture of innovation.\r\n"},"fromTime":"16:20","toTimeMillis":1465488600000,"toTime":"17:10","roomCapacity":220,"roomName":"Room A","slotId":"conf_room1_thursday_9_16h20_17h10","day":"thursday"},{"roomId":"room2","notAllocated":true,"fromTimeMillis":1465485600000,"break":null,"roomSetup":"classroom","talk":null,"fromTime":"16:20","toTimeMillis":1465488600000,"toTime":"17:10","roomCapacity":32,"roomName":"Room B","slotId":"conf_room2_thursday_9_16h20_17h10","day":"thursday"},{"roomId":"room3","notAllocated":false,"fromTimeMillis":1465485600000,"break":null,"roomSetup":"classroom","talk":{"trackId":"java","talkType":"Conference","track":"JVM languages","summaryAsHtml":"<p>This talk introduces streams and reactive streams. You will learn how stream-based programming can be used to implement web frontend and multiplayer backend of the classic game: Snake.</p>\n<p>Building dynamic applications using imperative approach tends to create lots of unmaintainable code. Stream-based programming tries to solve this problem by introducing fully declarative way of defining application logic. While using streams, you will focus on WHAT needs to be done, not HOW and WHEN.</p>\n<p>The talk is divided into 3 parts. In the first part you will learn how to create a frontend of the Snake web game using streams as building blocks. Then, we will move to the server side and use Scala and Akka Stream library to create backend service that will allow the game to be played by multiple players. In the third part, we will discuss reactive streams and how they make asynchronous communication safe.</p>\n","id":"LVS-7009","speakers":[{"link":{"href":"http://cfp.devoxx.co.uk/api/conferences/DevoxxUK2016/speakers/81aaf95ec86d3a2202913ca4d0bbd0aab4cb08cc","rel":"http://cfp.devoxx.co.uk/api/profile/speaker","title":"Michał Płachta"},"name":"Michał Płachta"}],"title":"Building multiplayer game using Reactive Streams ","lang":"en","summary":"This talk introduces streams and reactive streams. You will learn how stream-based programming can be used to implement web frontend and multiplayer backend of the classic game: Snake.\r\n\r\nBuilding dynamic applications using imperative approach tends to create lots of unmaintainable code. Stream-based programming tries to solve this problem by introducing fully declarative way of defining application logic. While using streams, you will focus on WHAT needs to be done, not HOW and WHEN. \r\n\r\nThe talk is divided into 3 parts. In the first part you will learn how to create a frontend of the Snake web game using streams as building blocks. Then, we will move to the server side and use Scala and Akka Stream library to create backend service that will allow the game to be played by multiple players. In the third part, we will discuss reactive streams and how they make asynchronous communication safe."},"fromTime":"16:20","toTimeMillis":1465488600000,"toTime":"17:10","roomCapacity":32,"roomName":"Room C","slotId":"conf_room3_thursday_9_16h20_17h10","day":"thursday"},{"roomId":"room4","notAllocated":false,"fromTimeMillis":1465485600000,"break":null,"roomSetup":"classroom","talk":{"trackId":"cld","talkType":"Conference","track":"Cloud, Containers & Infrastructure","summaryAsHtml":"<p>Docker, Kubernetes, Vault, Consul, NATS, Etcd, JuJu, SkyDNS, Heka, Prometheus, Cloud Foundry… The list of cloud enabling software written in Go is growing every day.  Learn why these big projects use Go, and see what you can gain by adding Go to your toolbelt.  This presentation will give you an overview of the compelling features of Go using examples from major cloud software repositories.  You’ll see how Go can help you reduce the complexity of your environment and reduce your deployment footprint.   You’ll see examples of good Go design in the open source repositories used to share these projects.  You’ll walk away with a clear understanding of why people choose Go to augment their existing infrastructure, and where Go might be a good fit in your software ecosystem.  As a bonus, you&#x27;ll learn some simple ways to make Java and Go friends.</p>\n","id":"EIA-0635","speakers":[{"link":{"href":"http://cfp.devoxx.co.uk/api/conferences/DevoxxUK2016/speakers/47d5c8405ea01f130443e163721db2aafa3b6126","rel":"http://cfp.devoxx.co.uk/api/profile/speaker","title":"Brian Ketelsen"},"name":"Brian Ketelsen"}],"title":"Why The Cloud is Written in Go, What You Can Learn From It","lang":"en","summary":"Docker, Kubernetes, Vault, Consul, NATS, Etcd, JuJu, SkyDNS, Heka, Prometheus, Cloud Foundry… The list of cloud enabling software written in Go is growing every day.  Learn why these big projects use Go, and see what you can gain by adding Go to your toolbelt.  This presentation will give you an overview of the compelling features of Go using examples from major cloud software repositories.  You’ll see how Go can help you reduce the complexity of your environment and reduce your deployment footprint.   You’ll see examples of good Go design in the open source repositories used to share these projects.  You’ll walk away with a clear understanding of why people choose Go to augment their existing infrastructure, and where Go might be a good fit in your software ecosystem.  As a bonus, you'll learn some simple ways to make Java and Go friends.\r\n"},"fromTime":"16:20","toTimeMillis":1465488600000,"toTime":"17:10","roomCapacity":32,"roomName":"Room D","slotId":"conf_room4_thursday_9_16h20_17h10","day":"thursday"},{"roomId":"aud_room","notAllocated":true,"fromTimeMillis":1465489200000,"break":null,"roomSetup":"theatre","talk":null,"fromTime":"17:20","toTimeMillis":1465493400000,"toTime":"18:30","roomCapacity":550,"roomName":"Auditorium","slotId":"key_aud_room_thursday_9_17h20_18h30","day":"thursday"}]}